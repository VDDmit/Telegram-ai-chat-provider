services:
  postgres:
    image: postgres:17.5
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bot-network
    restart: unless-stopped

  bot-app:
    image: ghcr.io/vddmit/telegram-ai-chat-provider:${IMAGE_TAG}
    container_name: telegram-ai-bot
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      BOT_TOKEN: ${BOT_TOKEN}
      BOT_NAME: ${BOT_NAME}
    networks:
      - bot-network
    restart: unless-stopped

  nginx:
    image: nginx:1.29.1
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - bot-network
    command: /bin/sh -c "while [ ! -f /etc/letsencrypt/live/ai-chat-prov.duckdns.org/fullchain.pem ]; do sleep 1; done; nginx -g 'daemon off;'"
    depends_on:
      - bot-app
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: >
      certonly --webroot -w /var/www/certbot 
      --email danvoropaeff@yandex.ru 
      -d ai-chat-prov.duckdns.org
      --agree-tos --non-interactive --force-renewal

volumes:
  postgres_data:

networks:
  bot-network:
    driver: bridge