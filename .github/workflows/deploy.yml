name: Build and Deploy to VPS

# Запускать воркфлоу при каждом push в ветку main
on:
  push:
    # Запускается при пуше на любую ветку
    branches: ['*']

# Переменные окружения для всего воркфлоуs
env:
  #Это должно совпадать с тем, что в compose.yml
  IMAGE_NAME: ghcr.io/vddmit/telegram-ai-chat-provider:latest

jobs:
  build-and-push:
    # Запускаем на виртуальной машине от GitHub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Скачиваем код из репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Устанавливаем Java (Maven кешируется автоматически)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        run: |
          echo "Logging in to GHCR as ${{ github.actor }}..."
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          echo "Login to GHCR successful."

      - name: Build and push Docker image
        run: |
          echo "Starting Docker build..."
          docker buildx build \
            --platform linux/amd64 \
            --tag ghcr.io/vddmit/telegram-ai-chat-provider:${{ github.sha }} \
            --tag ghcr.io/vddmit/telegram-ai-chat-provider:latest \
            --push \
            --progress=plain \
            .
          echo "Docker image build and push completed."

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # 1. Подключаемся к VPS по SSH и выполняем команды
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd /root/Telegram-ai-chat-provider

            git pull

            cat <<EOF > .env
            POSTGRES_USER=${{ secrets.VPS_POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.VPS_POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.VPS_POSTGRES_DB }}
            POSTGRES_URL=${{ secrets.VPS_POSTGRES_URL }}
            
            BOT_NAME=${{ secrets.VPS_BOT_NAME }}
            BOT_TOKEN=${{ secrets.VPS_BOT_TOKEN }}
            
            IMAGE_TAG=${{ github.sha }}
            EOF

            export $(grep -v '^#' .env | xargs)

            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker compose -f compose.yaml pull

            docker compose -f compose.yaml up -d --force-recreate

            docker image prune -af